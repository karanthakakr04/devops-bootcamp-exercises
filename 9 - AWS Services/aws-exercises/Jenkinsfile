#!/usr/bin/env groovy
@Library('jenkins-shared-library') _

pipeline {
  agent any

  tools {
    nodejs 'node'
  }

  environment {
    DOCKERHUB_REPO = credentials('DOCKERHUB_REPO')
    DOCKERHUB_USERNAME = credentials('DOCKERHUB_USERNAME')
    GITHUB_REPO_URL = credentials('GITHUB_REPO_URL')
  }

  stages {
    stage('Build') {
      steps {
        buildPipeline(
          dockerhubRepo: env.DOCKERHUB_REPO,
          dockerhubUsername: env.DOCKERHUB_USERNAME,
          githubRepoUrl: env.GITHUB_REPO_URL
        )
      }
    }
    
    stage('Deploy') {
      steps {
        script {
          echo 'Deploying the Docker image to the deployment server...'
          def shellCmd = "bash ./server-commands.sh ${IMAGE_NAME}"
          def deploymentServer = "ec2-user@<deployment-server-public-ip>"

          sshagent(['my-ssh-key']) {
            sh "scp -o StrictHostKeyChecking=no server-commands.sh ${deploymentServer}:/home/ec2-user"
            sh "scp -o StrictHostKeyChecking=no docker-compose.yaml ${deploymentServer}:/home/ec2-user"
            sh "ssh -o StrictHostKeyChecking=no ${deploymentServer} ${shellCmd}"
          }
        }
      }
    }
  }

  post {
    success {
      echo 'Pipeline executed successfully!'
    }
    failure {
      echo 'Pipeline execution failed!'
    }
  }
}