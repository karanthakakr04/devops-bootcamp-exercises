pipeline {

    agent any

    tools {
        nodejs 'node'  // Specify the Node.js installation name configured in Jenkins
    }

    stages {

        stage('Increment Version') {
            
            steps {

                script {
                    // Increment the application version
                    // You can use a npm package like 'npm-version' or write a custom script to increment the version
                    // Example: sh 'npm run version:increment'
                    echo 'Increment the application version...'
                    dir ('app') {
                        def versionType = input(
                            id: 'versionType',
                            message: 'Select the version increment type:',
                            ok: 'Increment',
                            parameters: [
                                choice(
                                    name: 'type',
                                    choices: [
                                        'patch',
                                        'minor',
                                        'major'
                                    ],
                                    description: 'Version increment type'
                                )
                            ]
                        )
                        sh "npm version {$versionType}"
                        def packageJson = readJSON file: 'package.json'
                        def appVersion = packageJson.version
                        def buildNumber = env.BUILD_NUMBER
                        def imageVersion = "${appVersion}-${buildNumber}"
                        env.IMAGE_VERSION = imageVersion
                    }
                }

            }

        }

        stage('Run Tests') {

            steps {

                script {
                    // Run tests for the application
                    // Example: sh 'npm test'
                    echo 'Run tests for the application...'
                    dir('app') {
                        sh 'npm install'
                        catchError(buildResult:'FAILURE', stageResult: 'FAILURE'){
                            sh 'npm test' 
                            error "Tests failed. Please fix the failing tests and rerun the pipeline."
                        }  
                    }
                }

            }

        }

        stage('Build Docker Image') {

            steps {

                script {
                    echo 'Build the Docker image with the incremented version...'
                    // Build the Docker image with the incremented version
                    // Example: sh 'docker build -t myapp:${version} .'
                }

            }

        }

        stage('Push Docker Image') {

            steps {

                script {
                    echo 'Push the Docker image to a registry...'
                    // Push the Docker image to a registry
                    // Example: sh 'docker push myapp:${version}'
                }

            }

        }

        stage('Commit Version') {

            steps {

                script {
                    echo 'Commit the version increment to Git...'
                    // Commit the version increment to Git
                    // Example:
                    // sh 'git add package.json'
                    // sh 'git commit -m "Increment version to ${version}"'
                    // sh 'git push origin main'
                }

            }

        }

    }

}